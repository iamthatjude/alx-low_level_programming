Terminal:
$ man gcc
$ man ascii

Google:
gcc manpage
ascii manpage
=====================

0. Positive anything is better than negative nothing

- A program that assigns a random number to a given variable any time it is executed. The program should say if the given variable is positive or negative or zero.
;; Option: if .. else if .. else if


----
1. The last digit

- A program that assigns a random number to a given variable each time it is executed. The program should print the last digit of the number stored in the variable.
;; Option 1: if ..  else if .. else if
;; Option 2: % (modulo operator)
;;; Usage: using modulo on the random number by 10. Ex: 1234 % 10 will give you the last number '4'


----
2. I sometimes suffer from insomnia. And when I can't fall asleep, I play what I call the alphabet game

- A program that prints the alphabet in lowercase, followed by a new line.
- Use the "putchar()" function for printing and new line.
;; Option 1: while (){..}
;; Option 2: putchar() and putchar('\n')


----
3. alphABET

- A program that prints the alphabet in lowercase, and then in uppercase, followed by a new line.
- Use the "putchar()" function for printing and new line.
;; Option 1: while(){..} while(){..}
;; Option 2: putchar() and putchar('\n')


---
4. When I was having that alphabet soup, I never thought that it would pay off

- A program that prints the alphabet in lowercase, followed by a new line.
- Use the "putchar()" function for printing and new line.
-: there are two ways to write this program which is also in the folder on github
;; Option 1: while(){..}
;; Option 2: if(){..}
;; Option 3: putchar() 's


----
5. Numbers

- A program that prints all single digit numbers of base 10 starting from 0, followed by a new line.
-: simply put, it prints 0 to 9
;; Option 1: while(){..}
;; Option 2: putchar('\n')


----
6. Numberz

- A program that prints all single digit numbers of base 10 starting from 0, followed by a new line.
-:: Not allowed to use any variable of type 'char'
-:: Can only use 'putchar()' function
;; Option 1: while(){..}
;; Option 2: putchar()


----
7. Smile in the mirror

- A program that prints the lowercase alphabet in reverse, followed by a new line.
;; Option 1: while(){..}
;; Option 2: putchar()


----
8. Hexadecimal

- A program that prints all the numbers of base 16 in lowercase, followed by a new line.
-: there are two ways to write this program which is also in the folder on github
;; Option 1: putchar()
;; Option 2: while(){..}
;; Option 3: if ()


----
9. Patience, persistence and perspiration make an unbeatable combination for success

- A program that prints all possible combinations of single-digit numbers.
-:: numbers must be separated by ',' followed by a space
-:: to be printed in ascending order
-:: not allowed to use any variable of type 'char'
-: there are two ways to write this program which is also in the folder on github
;; Option 1: putchar()
;; Option 2: while(){..}
;; Option 3: if .. else


----
10. Inventing is a combination of brains and materials. The more brains you use, the less material you need

- A program that prints all possible different combinations of two digits.
-:: numbers must be separated by ',' followed by a space
-:: to be printed in ascending order
-:: not allowed to use any variable of type 'char'
;; Option 1: putchar()
;; Option 2: while(){..} while(){..}


----
11. The success combination in business is: Do what you do better... and: do more of what you do...

- A program that prints all possible different combinations of three digits.
-:: numbers must be separated by ',' followed by a space
-:: to be printed in ascending order
-:: not allowed to use any variable of type 'char'
;; Option 1: putchar()
;; Option 2: while(){..} while(){..} while(){..}


----
12. Software is eating the World

- A program that prints all possible combinations of two two-digit numbers.
-:: numbers must be separated by ',' followed by a space
-:: to be printed in ascending order
-:: not allowed to use any variable of type 'char'
;; Option 1: putchar()
;; Option 2: while(){..} while(){..} while(){..} while(){..}